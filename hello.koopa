decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()
global  @a_0 = alloc i32, -1
global  @b_1 = alloc i32, 1
fun @inc_a(): i32 {
%entry:
  %0 = load @a_0
  @b_2 = alloc i32
  store %0, @b_2
  %1 = load @b_2
  %2 = add %1, 1
  store %2, @b_2
  %3 = load @b_2
  store %3, @a_0
  %4 = load @a_0
  ret %4
}
fun @main(): i32 {
%entry:
  @k_3 = alloc i32
  store 5, @k_3
  jump %while_entry_0
%while_entry_0:
  %5 = load @k_3
  %6 = ge %5, 0
  br %6, %while_body_0, %while_end_0
%while_body_0:
  @result_0 = alloc i32
  store 0, @result_0
  @result_1 = alloc i32
  store 0, @result_1
  %7 = call @inc_a()
  br %7, %then_1, %end_1
%then_1:
  %8 = call @inc_a()
  %9 = ne %8, 0
  store %9, @result_1
  jump %end_1
%end_1:
  %10 = load @result_1
  br %10, %then_0, %end_0
%then_0:
  %11 = call @inc_a()
  %12 = ne %11, 0
  store %12, @result_0
  jump %end_0
%end_0:
  %13 = load @result_0
  br %13, %then_2, %end_2
%then_2:
  %14 = load @a_0
  call @putint(%14)
  call @putch(32)
  %15 = load @b_1
  call @putint(%15)
  call @putch(10)
  jump %end_2
%end_2:
  @result_3 = alloc i32
  store 1, @result_3
  %16 = call @inc_a()
  %17 = lt %16, 14
  br %17, %end_3, %then_3
%then_3:
  @result_4 = alloc i32
  store 0, @result_4
  %18 = call @inc_a()
  br %18, %then_4, %end_4
%then_4:
  %19 = call @inc_a()
  %20 = call @inc_a()
  %21 = sub %20, %19
  %22 = add %21, 1
  %23 = ne %22, 0
  store %23, @result_4
  jump %end_4
%end_4:
  %24 = load @result_4
  %25 = ne %24, 0
  store %25, @result_3
  jump %end_3
%end_3:
  %26 = load @result_3
  br %26, %then_5, %else_5
%then_5:
  %27 = load @a_0
  call @putint(%27)
  call @putch(10)
  %28 = load @b_1
  %29 = mul %28, 2
  store %29, @b_1
  jump %end_5
%else_5:
  %30 = call @inc_a()
  jump %end_5
%end_5:
  %31 = load @k_3
  %32 = sub %31, 1
  store %32, @k_3
  jump %while_entry_0
%while_end_0:
  %33 = load @a_0
  call @putint(%33)
  call @putch(32)
  %34 = load @b_1
  call @putint(%34)
  call @putch(10)
  %35 = load @a_0
  ret %35
}
